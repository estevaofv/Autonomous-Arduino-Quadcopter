<?xml version="1.0"?>

<launch>
	
	<arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>
	<arg name="base_frame" default="base_footprint"/>
	<arg name="odom_frame" default="nav"/>
	<arg name="pub_map_odom_transform" default="true"/>
	<arg name="scan_subscriber_queue_size" default="5"/>
	<arg name="scan_topic" default="scan"/>
	<arg name="map_size" default="1024"/>

	<include file="$(find rplidar_ros)/launch/rplidar_mod.launch" />

	<include file="$(find hector_exploration_node)/launch/exploration_planner.launch" />
	
	<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
	
		<!-- Frame names -->
            <param name="map_frame" value="map" />
	    <param name="base_frame" value="base_link" />
	    <param name="odom_frame" value="base_link" />
	    
	    <!-- Tf use -->
	    <param name="use_tf_scan_transformation" value="true"/>
	    <param name="use_tf_pose_start_estimate" value="false"/>
	    <param name="pub_map_odom_transform" value="true"/>
	    <param name="pub_odometry" value="false"/>
	    
	    <!-- Map size / start point -->
	    <param name="map_resolution" value="0.1"/>
	    <param name="map_size" value="$(arg map_size)"/>
	    <param name="map_start_x" value="0.5"/>
	    <param name="map_start_y" value="0.5" />
	    <param name="map_multi_res_levels" value="2" />
	    
	    <!-- Map update parameters -->
	    <param name="update_factor_free" value="0.4"/>
	    <param name="update_factor_occupied" value="0.9" />    
	    <param name="map_update_distance_thresh" value="0.4"/>
	    <param name="map_update_angle_thresh" value="0.06" />
	    <param name="laser_z_min_value" value = "-1.0" />
	    <param name="laser_z_max_value" value = "1.0" />
	    
	    <!-- Advertising config --> 
	    <param name="advertise_map_service" value="true"/>
	    
	    <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
	    <param name="scan_topic" value="$(arg scan_topic)"/>
	    
	    <!-- Debug parameters -->
	    <!--
	      <param name="output_timing" value="false"/>
	      <param name="pub_drawings" value="true"/>
	      <param name="pub_debug_output" value="true"/>
	    -->
	    <param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />
	</node>
	
	<!-- this publishes the transform between the base and laser, base and map -->

	<node pkg="tf" type="static_transform_publisher" name="base_laser_broadcaster" args="0.0 0.0 0.0 0.0 0.0 0.0 /base_link /laser_frame 40"/>
	<!--<node pkg="tf" type="static_transform_publisher" name="base_map_broadcaster" args="0.0 0.0 0.0 0.0 0.0 0.0 /base_link /map 40"/>-->
	

	<!-- this node is in charge of face detection and the highest level of decision making -->

	<node pkg="quadcopter_ros" type="curiosity_node" name="curiosity_node" output="screen"/>

	<!-- this node is incharge of controlling the quad and navigating-->

	<node pkg="quadcopter_ros" type="explorer_node" name="explorer_node" output="screen"/>
	<!-- <node pkg="quadcopter_ros" type="controller_node" name="controller_node" output="screen"/> -->
	<node pkg="quadcopter_ros" type="serial_node" name="serial_node" output="screen"/>
	
	<node pkg="move_base" type="move_base" respawn="false" name="move_base">
    		<rosparam file="$(find quadcopter_ros)/config/move_base/costmap_common_params.yaml" command="load" ns="global_costmap" />
    		<rosparam file="$(find quadcopter_ros)/config/move_base/costmap_common_params.yaml" command="load" ns="local_costmap" />
   	 	<rosparam file="$(find quadcopter_ros)/config/move_base/local_costmap_params.yaml" command="load" ns="local_costmap"/>
    		<rosparam file="$(find quadcopter_ros)/config/move_base/global_costmap_params.yaml" command="load" ns="global_costmap"/>
    		<rosparam file="$(find quadcopter_ros)/config/move_base/base_local_planner_params.yaml" command="load" ns="TrajectoryPlannerROS"/>
  	</node>
	

</launch>
